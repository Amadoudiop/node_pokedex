{"version":3,"sources":["../../../server/routes/Users.js"],"names":["express","require","User","encrypter","errorManager","passwordGenerator","router","Router","getUsers","req","res","find","then","json","result","catch","error500","err","getUser","findById","params","id","user","status","send","createUser","p","body","console","log","password","generatePassword","encrypt","newUser","save","editUser","name","email","pokemon","deleteUser","findByIdAndRemove","response","message","_id","get","post","put","delete","module","exports"],"mappings":"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","file":"Users.js","sourcesContent":["const express = require('express')\n// const _ = require('lodash')\nconst User = require('../models/user')\nconst encrypter = require('../services/encrypter')\nconst errorManager = require('../helpers/request-api-error')\nconst passwordGenerator = require('../services/password-generator')\n\nconst router = express.Router()\n\nconst getUsers = (req, res) => {\n    User.find()\n        .then(result => res.json(result))\n        .catch(err => errorManager.error500(res, err))\n}\n\nconst getUser = (req, res) => {\n    User.findById(req.params.id, (err, user) => {\n        if (err) {\n            res.status(500).send(err)\n        }\n        if (user) {\n            res.status(200).send(user)\n        } else {\n            res.status(404).send(\"No user found with that ID\")\n        }\n    });\n}\n\nconst createUser = (req, res) => {\n    const p = req.body\n    if(req) console.log(req.body)\n    const password = passwordGenerator.generatePassword(10)\n    p.password = encrypter.encrypt(password)\n    const newUser = new User(p)\n    newUser.save().then((user) => {\n        res.json(user)\n    }).catch(err => errorManager.error500(res, err))\n}\n\nconst editUser = (req, res) => {\n    User.findById(req.params.id, (err, User) => {\n        if (err) {\n            res.status(500).send(err);\n        } else {\n            User.name = req.body.name || user.name;\n            User.email = req.body.email || user.email;\n            User.password = req.body.password || user.password;\n\n            User.save((err, pokemon) => {\n                if (err) {\n                    res.status(500).send(err)\n                }\n                res.status(200).send(pokemon);\n            });\n        }\n    })\n}\n\nconst deleteUser = (req, res) => {\n    User.findByIdAndRemove(req.params.id, (err, user) => {\n        let response = {\n            message: \"User successfully deleted\",\n            id: user._id\n        };\n        res.status(200).send(response);\n    });\n}\n\n\nrouter.get('/', getUsers)\nrouter.get('/:id', getUser)\nrouter.post('/', createUser)\nrouter.put('/:id',  editUser)\nrouter.delete('/:id', deleteUser)\n\nmodule.exports = router"]}